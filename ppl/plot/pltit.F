	SUBROUTINE PLTIT(X,NXS)
	DIMENSION X(NXS)
C** 
C**    @(#)pltit.F	1.2    9/8/88
C**
C**
C***********************************************************************
C**
C**                 PLOT+ Scientific Graphics System
C**
C***********************************************************************
C**
C**
C	KTYPE = 1 -XY  0 -Z  2-VECTOR
#ifdef unix
	INCLUDE 'pplinc/PARAMPL5.DAT'
	INCLUDE 'pplinc/LINES.INC'
	INCLUDE 'pplinc/PEN.INC'
	INCLUDE 'pplinc/AXIS.INC'
	INCLUDE 'pplinc/HD.INC'
	INCLUDE 'pplinc/CONT.INC'
	INCLUDE 'pplinc/TAXIS.INC'
	INCLUDE 'pplinc/AXISL.INC'
	INCLUDE 'pplinc/PLT.INC'
	INCLUDE 'pplinc/PLTL.INC'
	INCLUDE 'pplinc/MPLOT.INC'
	INCLUDE 'pplinc/CMRD.INC'
	INCLUDE 'pplinc/PRMCOM.INC'
	include 'pplinc/LUNITS.INC'
	INCLUDE 'cmdinc/SWITCH.INC'
	INCLUDE 'cmdinc/SYSTEM.INC'
#else
        INCLUDE 'pplinc:PARAMPL5.DAT'
        INCLUDE 'pplinc:LINES.INC'
        INCLUDE 'pplinc:PEN.INC'
        INCLUDE 'pplinc:AXIS.INC'
        INCLUDE 'pplinc:HD.INC'
        INCLUDE 'pplinc:TAXIS.INC'
        INCLUDE 'pplinc:AXISL.INC'
        INCLUDE 'pplinc:PLT.INC'
        INCLUDE 'pplinc:PLTL.INC'
        INCLUDE 'pplinc:MPLOT.INC'
        INCLUDE 'pplinc:CMRD.INC'
        INCLUDE 'PPLINC:PRMCOM.INC'
        INCLUDE 'cmdinc:SWITCH.INC'
        INCLUDE 'cmdinc:SYSTEM.INC'
#endif
	LOGICAL CLEAR,FIRST,CONTR
	DATA FIRST/.TRUE./
	IF(((MAKEP.EQ.'CONTOUR'.OR.MAKEP.EQ.'VIEW')
     *	  .AND.JTYPE.EQ.1).OR.
     *	  ((MAKEP.EQ.'VECTOR').AND.JTYPE.GT.-1).OR.
     *	  ((MAKEP.EQ.'PLOT'.OR.MAKEP.EQ.'PLOTV'.OR.
     *	  MAKEP.EQ.'PLOTUV'.OR.MAKEP.EQ.'VELVCT')
     *	  .AND.JTYPE.NE.1))RETURN
	CONTR=MAKEP.EQ.'CONTOUR'.OR.MAKEP.EQ.'VIEW'
     *		.OR.MAKEP.EQ.'VECTOR'
	CLEAR = .NOT.SOVER .AND. IMCNT.LE.1 .AND. .NOT.PLTOPN
C	SETUP AXIS FOR ALL PLOT TYPES.
	IF(.NOT.SOVER .AND. .NOT.PLTOPN)CALL SIZE(WIDTH,HEIGHT)
#ifdef unix
	call flush(lttout)
#endif
	CALL OPNDEV(TERMF,CLEAR)
	CALL COLOR(IPEN(0))
	IF(.NOT.SOVER)THEN
	    CALL SETAX(X,NXS,XF,YF,XL,YL,XH,YH,NMX,NMY,XTI,XTL)
	    CALL DAXIS(XF,YF,NMX,NMY)
	ELSE
	    IF(ITFLG.NE.0)THEN
		TLO=1.-DIFF(IT1,ITSTRT)/DT
		THI=TLO+DIFF(IT1,IT2)/DT
	    ENDIF
	    IF(ITFLG.EQ.1)THEN
		XTI=XHI
		XTL=XLO
		XHI=THI
		XLO=TLO
	    ELSE IF(ITFLG.EQ.-1)THEN
		XTI=YHI
		XTL=YLO
		YHI=THI
		YLO=TLO
	    ENDIF
	    IF(CONTR)THEN
		call trans(0,xmin,ymin,xtm,ytm)
		call trans(0,xmax,ymax,xtx,ytx)
		XL=(xtm-XLO)*XF
		XH=XLEN+(xtx-XHI)*XF
		YL=(ytm-YLO)*YF
		YH=YLEN+(ytx-YHI)*YF
	    ENDIF
	ENDIF
C	DRAW AXIS AND LABELS
C	DO PLOTTING
C
	IF(IWIND.GT.0)CALL WINDOW(XLO,YLO,XHI,YHI)
C
	IF(MAKEP.EQ.'CONTOUR')THEN
	    IF(JTYPE.EQ.-1.AND.IVCOMP.EQ.2)THEN
	   	IVLOC=NX*NY+1
	    ELSE IF(JTYPE.EQ.-2.AND.IVCOMP.EQ.2)THEN
		IVLOC=NX*NY+NX+NY+1
	    ELSE
		IVLOC=1
	    ENDIF
	    CALL PLOTZ(X(IVLOC),XF,YF,XL,YL,XH,YH)
	ELSE IF(MAKEP.EQ.'PLOT')THEN
	    CALL PLOTXY(X,NXS,XF,YF)
	ELSE IF(MAKEP.EQ.'VECTOR')THEN
	    IF(JTYPE.EQ.-1)THEN
		CALL VECFLD(X(1),X(NX*NY+1),NX,NY,X(1),X(1),XF,YF)
	    ELSE
		IP1=NX*NY+1
		IP2=IP1+NX
		IP3=IP2+NY
		CALL VECFLD(X(1),X(IP3),NX,NY,X(IP1),X(IP2),XF,YF)
	    ENDIF
	ELSE IF(MAKEP.EQ.'VELVCT')THEN
	    CALL VELVCT(X,NXS,XF,YF)
	ELSE IF(MAKEP.EQ.'PLOTV'.OR.MAKEP.EQ.'PLOTUV')THEN
	    CALL PLOTV(X,NXS,XF,YF)
	ELSE IF(MAKEP.EQ.'VIEW')THEN
	    IF(JTYPE.EQ.-1.AND.IVCOMP.EQ.2)THEN
	   	IVLOC=NX*NY+1
	    ELSE IF(JTYPE.EQ.-2.AND.IVCOMP.EQ.2)THEN
		IVLOC=NX*NY+NX+NY+1
	    ELSE
		IVLOC=1
	    ENDIF
	    CALL VIEW(X(IVLOC))
	ENDIF
	CALL SCALE(XF,YF,XORG,YORG,XLO,YLO)
C
	CALL WINDOW(0.,0.,0.,0.)
C
	CALL DAXIS2(XF,YF,NMX,NMY)
	IF(ITFLG.EQ.1)THEN
	    XHI=XTI
	    XLO=XTL
	ELSE IF(ITFLG.EQ.-1)THEN
	    YHI=XTI
	    YLO=XTL
	ENDIF
	RETURN
	END
