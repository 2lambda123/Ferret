	SUBROUTINE LEV
C** 
C**    @(#)lev.F	1.1    3/10/88
C**
C**
C***********************************************************************
C**
C**                 PLOT+ Scientific Graphics System
C**
C***********************************************************************
C**
C**
#ifdef unix
	INCLUDE 'pplinc/PARAMPL5.DAT'
	INCLUDE 'pplinc/CMRDL.INC'
	INCLUDE 'pplinc/CMRD.INC'
	INCLUDE 'pplinc/CONT.INC'
#else
        INCLUDE 'pplinc:PARAMPL5.DAT'
        INCLUDE 'pplinc:CMRDL.INC'
        INCLUDE 'pplinc:CMRD.INC'
        INCLUDE 'pplinc:CONT.INC'
#endif
	CHARACTER PRSE*255

*       *jd* rename variable IF to INTIF for MAC 7.92

	DIMENSION VAL(4),INTIF(4)

	IF(LABEL.EQ.' ')THEN
	    NLEV=10
	    IAUTOC=1
	    GOTO 10
	ENDIF
	CALL UPPER(LABEL,255)
C
C	BEGIN PARSE
C
	ISTP=-1
	IREL=0
200	LABEL=LABEL(ISTP+2:)
	IST=INDEX(LABEL,'(')+1
	ISTP=INDEX(LABEL,')')-1
	IF(IST.EQ.1)GOTO 10
	IF(ISTP.EQ.-1)THEN
	    CALL CMDERR(10,STRING,ISLEN,LBSTRT+IREL+IST-2)
	    GOTO 10
	ENDIF
	PRSE=LABEL(IST:ISTP)
	DO 11 I=1,4
	VAL(I)=0.0
11	INTIF(I)=0
	CALL LEVPRS(PRSE,VAL,INTIF,IER,IPOS)
	IERR=LBSTRT+IREL+IST+IPOS-2
	IF(IER.NE.0)THEN
	    CALL CMDERR(IER,STRING,ISLEN,IERR)
	    RETURN
	ENDIF
	IREL=IREL+ISTP+1
	CALL LEVSET(IST,VAL,INTIF,LWGH,NL)
C
C	TEST
C
	IF(LWGH.EQ.0)THEN
	    IF(IAUTOC.EQ.1)NLEV=0
	    IAUTOC=0
C
C	SET CONTOUR LEVELS
C
	    IF(INTIF(1).EQ.0)THEN
		IAUTOC=1
		NLEV=10
		GOTO 200
	    ENDIF
	    IF(INTIF(3).EQ.1.AND.VAL(3).EQ.0.)THEN
		DZ=(ZLEV(NLEV)-ZLEV(1))*0.00001
		DO 500 I=1,NL
		Z=VAL(1)+(VAL(2)-VAL(1))*(I-1)
		DO 510 J=1,NLEV
		IF(ABS(Z-ZLEV(J)).LE.DZ)THEN
		    CALL DELLEV(J)
		    GOTO 500
 	ENDIF
510		CONTINUE
500		CONTINUE
	    ELSE
C
C	CREATE NEW LEVELS
C
		IF(NLEV+NL.GT.ICNLEV)THEN
		    CALL CMDERR(11,STRING,ISLEN,IERR)
		    RETURN
		ENDIF
		DO 100 I=1,NL
		J=NLEV+I
		ZLEV(J)=VAL(1)+VAL(3)*(I-1)
		LWGT(J)=2
		IF(ZLEV(J).EQ.0.0)GOTO 100
		IF(ZLEV(J).GT.0)THEN
		    LWGT(J)=1
		ELSE
		    LWGT(J)=3
		ENDIF
100		CONTINUE
C
C	FIND MIN AND MAX
C
		ZMIN=ZLEV(1)
		ZMAX=ZMIN
		DO 110 I=2,NLEV+NL
		IF(ZLEV(I).GT.ZMAX)ZMAX=ZLEV(I)
		IF(ZLEV(I).LT.ZMIN)ZMIN=ZLEV(I)
110		CONTINUE
		DZ=ZMAX-ZMIN
		IF(DZ.EQ.0.)DZ=ABS(ZMAX)
		IF(DZ.EQ.0.)DZ=10000.0
		JJ=NSIGC-IFIX(ALOG10(DZ)+0.5)
		IF(JJ.LE.0)JJ=-1
		DO 120 I=1,NL
		J=NLEV+I
		LCLR(J)=0
		IF(INTIF(4).EQ.1)THEN
		    LDIG(J)=VAL(4)
		ELSE
		    IF(ZLEV(J).EQ.0)THEN
			LDIG(J)=-1
		    ELSE
			LDIG(J)=JJ
		    ENDIF
		ENDIF
120		CONTINUE
		NLEV=NLEV+NL
C
C	SORT
C
		CALL LEVSRT
C
C	CHECK FOR DUPLICATE LEVELS?
C
		DZ=DZ*0.00001
		I=1
		IF(NLEV.LE.1)GOTO 330
320		J=I+1
325		IF(ABS(ZLEV(I)-ZLEV(J)).LE.DZ)THEN
		    CALL DELLEV(I)
		ENDIF
		J=J+1
		IF(J.LE.NLEV)GOTO 325
330		I=I+1
		IF(I.LT.NLEV)GOTO 320
	    ENDIF
	ELSE IF(LWGH.EQ.5)THEN
	    DZ=(ZLEV(NLEV)-ZLEV(1))*0.00001
	    DO 600 I=1,NL
	    Z=VAL(1)+VAL(3)*(I-1)
	    DO 610 J=1,NLEV
	    IF(ABS(Z-ZLEV(J)).LE.DZ)THEN
		CALL DELLEV(J)
		GOTO 600
	    ENDIF
610	    CONTINUE
600	    CONTINUE
	ELSE
	    IF(IAUTOC.EQ.1)GOTO 10
C
C	SET WEIGHTS
C
	    DZ=(ZLEV(NLEV)-ZLEV(1))*0.00001
	    DO 400 I=1,NL
	    Z=VAL(1)+VAL(3)*(I-1)
	    DO 410 J=1,NLEV
	    IF(ABS(Z-ZLEV(J)).LE.DZ)THEN
		IF(LWGH.EQ.4)THEN
		    LCLR(J)=VAL(4)
		ELSE
		    LWGT(J)=LWGH
		ENDIF
		GO TO 400
	    ENDIF
410	    CONTINUE
400	    CONTINUE
	ENDIF
	GOTO 200
10	RETURN
	END
