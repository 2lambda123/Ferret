	#
	# platform_specific_includes.mk.x86_64-linux
	#
	# This file is included in other Makefiles and defines
	# platform specific macros

#

#	NETCDF4_DIR     = /home/users/tmap/ferret/x86_64-linux
#	NETCDF4_DIR     = /home/users/ansley/local/x86
	NETCDF4_DIR     = /home/users/ansley/local/x86_nc413

	INCLUDES        =  -I/../fmt/cmn/ \
			  -I/$(NETCDF4_DIR)/include \
			  -I. \
			  -I/usr/include \
			  -I/usr/include/X11 \
			  -I../common \
			  -I../../fmt/cmn \
			  -I../../ppl/include \
			  $(GKS_INCLUDES)

	FINCLUDES	= -I../../ppl/tmap_inc \
			   -I../include -I../../fmt/cmn \
			   -I../common \
			   -I../../ppl/include  -I../../fer/common

	GUI_INCLUDES	= -I/usr/ucbinclude -I/usr/dt/include 
	 
	GKS_INCLUDES	=-I../../ppl/include/xgks \
			  -I../../xgks/src/lib \
			  -Ipplinc/xgks \
			  -I../../xgks/port 

	# New platform type var - *acm* 2/11
	PLATFORM = Linux(gfortran) 2.6.18-238.1.1.el5

	CC              = gcc
	CXX		= c++
	FC		= gfortran
	F77		= gfortran


	RANLIB          = /usr/bin/ranlib
	# have to remove -02 flag due to bug in v2.96 of compiler. see
	#   for http://gcc.gnu.org/ml/gcc-bugs/2000-04/msg00716.html for info

	CPP		= /lib/cpp

	# -DusingDODSf2cUnderscore needed if using netcdf library...

	CPP_FLAGS       = $(INCLUDES) \
			  -O2 \
			  -fPIC -Dunix -Dgfortran   \
			  -DNO_OPEN_SHARED \
			  -DNO_OPEN_RECORDTYPE -DNO_SNGL  \
			  -DX_REFRESH -Dreclen_in_bytes  \
			  -DNO_OPEN_READONLY -DMANDATORY_FORMAT_WIDTHS\
			  -DNO_OPEN_CARRIAGECONTROL -Dxgks -DSTAR_1_SUPPORTED \
			   -DFULL_GUI_VERSION -DX_REFRESH \
			  -DXT_CODE  -DLINUX -DNO_PASSED_CONCAT \
			  -Dcrptd_cat_argument \
			  -DG77_SIGNAL -DG77 \
			  -DNEED_IAND -DINTERNAL_READ_FORMAT_BUG -DNO_PREPEND_STRING

# also consider -ffloat-store. Removing -m64  
	CFLAGS          =    $(CPP_FLAGS) -Dlint -D_SSIZE_T -DVOID_SIGHANDLER -D_POSIX_VERSION -DLINUX -DFULL_GUI_VERSION   -DFULL_GUI_VERSION -DX_REFRESH -DXT_CODE -Dsun4 
	FFLAGS          =    $(CPP_FLAGS) -fno-automatic -c -DusingDODSf2cUnderscore -fno-second-underscore -fdollar-ok   -ffixed-line-length-132 -ffpe-trap=overflow $(FINCLUDES)
	PPLUS_FFLAGS    =    $(CPP_FLAGS) -fno-automatic -c -DusingDODSf2cUnderscore -fno-second-underscore  -fdollar-ok   -ffixed-line-length-132  $(FINCLUDES)

        #PROF_FLAGS      = -pg

	# Below this line are macro definitions used only for the final linking of the executable
	#

	LD		= gfortran
	LDFLAGS		= -v --verbose -export-dynamic
	 
	SYSLIB		= -lX11 \
			  -lcurl \
			  -ldl \
			  -lz  \
			  -lm \
			  -lc 

	TMLIB		= ../lib/tmap_lib.a

	GKSLIB		= ../xgks/src/lib/libxgks.a
	READLINELIB	= /usr/lib64/libreadline.a 

# netcdf4.1 static librarys only (except for libdl)
# $(NETCDF4_DIR)/lib/libnetcdff.a  (needed for netcdf4.1.2 and higher)

	CDFLIB          = $(NETCDF4_DIR)/lib/libnetcdff.a \
	                  $(NETCDF4_DIR)/lib/libnetcdf.a \
			  /usr/local/hdf5_186/lib/libhdf5_hl.a \
			  /usr/local/hdf5_186/lib/libhdf5.a \
			  /usr/local/lib/libz.a

	LINUX_OBJS  = special/linux_routines.o dat/*.o ../fmt/src/x*.o ../ppl/plot/ppldata.o

	TERMCAPLIB 	=/usr/lib64/libncurses.a

# cancel the default rule for .f -> .o to prevent objects from being built
# from .f files that are out-of-date with respect to their corresponding .F file
%.o : %.f

# use cpp to preprocess the .F files to .f files and then compile the .f files
%.o : %.F
	rm -f $*.f
	$(CPP) -traditional $(CPP_FLAGS) $(<F) | sed -e 's/de /de /g' | sed -e 's/de /de /g' > $*.f	 
	$(F77) $(FFLAGS) $*.f	 

#
# End of platform_specific_includes.mk.x86_64-linux
#
