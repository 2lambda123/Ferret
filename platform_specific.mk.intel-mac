#
# platform_specific_includes.mk.intel-mac
#
# This file is included in other Makefiles and defines platform specific macros.  
# Should not contain any relative directories (other than .) since these Makefiles
# exist at various levels in the directory tree.

# Extended regular expressions flag for sed (used with cleaning up run_tests results)
	SED_EXTREGEX_FLAG = -E

# If READLINE_DIR is given, -I$(READLINE_DIR)/include must be the first include flag 
# (other than .) so the correct readline include files are used.
ifneq ($(strip $(READLINE_DIR)),)
	MYINCLUDES	= -I. \
			  -I$(READLINE_DIR)/include \
			  -I$(NETCDF4_DIR)/include \
			  -I$(DIR_PREFIX)/fer/common \
			  -I$(DIR_PREFIX)/fmt/cmn \
			  -I$(DIR_PREFIX)/ppl/tmap_inc \
			  -I$(DIR_PREFIX)/ppl/include \
			  -I/opt/X11/include \
			  -I$(DIR_PREFIX)/xgks/src/lib \
			  -I$(DIR_PREFIX)/xgks/port 
else
	MYINCLUDES	= -I. \
			  -I$(NETCDF4_DIR)/include \
			  -I$(DIR_PREFIX)/fer/common \
			  -I$(DIR_PREFIX)/fmt/cmn \
			  -I$(DIR_PREFIX)/ppl/tmap_inc \
			  -I$(DIR_PREFIX)/ppl/include \
			  -I/opt/X11/include \
			  -I$(DIR_PREFIX)/xgks/src/lib \
			  -I$(DIR_PREFIX)/xgks/port 
endif

	MYDEFINES	= -Dcrptd_cat_argument \
			  -Ddouble_p \
			  -Dgfortran \
			  -Dreclen_in_bytes  \
			  -Dunix \
			  -Dxgks \
			  -DG77 \
			  -DG77_SIGNAL \
			  -DINTERNAL_READ_FORMAT_BUG \
			  -DMANDATORY_FORMAT_WIDTHS \
			  -DNEED_IAND \
			  -DNO_DOUBLE_ESCAPE_SLASH \
			  -DNO_OPEN_CARRIAGECONTROL \
			  -DNO_OPEN_SHARED \
			  -DNO_OPEN_READONLY \
			  -DNO_OPEN_RECORDTYPE \
			  -DNO_PASSED_CONCAT \
			  -DNO_PREPEND_STRING \
			  -DSTAR_1_SUPPORTED \
			  -DX_REFRESH

	PLATFORM 	= $(shell uname -s -r)

	CC		= $(shell which gcc-7)
	FC		= $(shell which gfortran-7)
	F77		= $(shell which gfortran-7)
	AR		= $(shell which ar)
	ARFLAGS		= -cr
	RANLIB		= $(shell which ranlib)

# Flags for compiling all C code
# -DusingDODSf2cUnderscore needed if using netcdf library...
# also consider -ffloat-store.
	CFLAGS		= -fPIC $(MYDEFINES) $(MYINCLUDES)

# Flags for compiling the PlotPlus FORTRAN code (ppl subdirectory)
	PPLUS_FFLAGS	= -fPIC \
			  -fno-automatic \
			  -fno-second-underscore \
			  -fdollar-ok \
			  -ffixed-line-length-132 \
			  $(MYDEFINES) $(MYINCLUDES)

# Flags for compiling non-PlotPlus FORTRAN code
	FFLAGS		= -fPIC \
			  -fno-automatic \
			  -fno-second-underscore \
			  -fdollar-ok \
			  -ffixed-line-length-132 \
			  -ffpe-trap=overflow \
			  -fimplicit-none \
			  -fdefault-real-8 \
			  -fdefault-double-8 \
			  $(MYDEFINES) $(MYINCLUDES)

	OPT_FLAGS	= -O -DNDEBUG
	PPLUS_OPT_FLAGS	= -O0
	DBG_FLAGS	= -O0 -g
	PROF_FLAGS	= -O0 -g -pg

	# Below this line are macro definitions used only for the final linking of the executable

	LD		= $(shell which gcc-7)
	LDFLAGS		= -v --verbose -fPIC -rdynamic

# If $(READLINE_DIR) is given (and not blank), statically link in the readline 
# and history libraries given under that directory; otherwise, just use the usual 
# flags to link in the system readline and history libraries.
ifneq ($(strip $(READLINE_DIR)),)
	SYSLIB		= -L/opt/X11/lib -lX11 \
			  $(READLINE_DIR)/lib/libreadline.a \
			  $(READLINE_DIR)/lib/libhistory.a \
			  -lncurses \
			  -lcurl \
			  -ldl \
			  -lz \
			  -lgfortran \
			  -lm
else
	SYSLIB		= -L/opt/X11/lib -lX11 \
			  -lreadline \
			  -lhistory \
			  -lcurl \
			  -ldl \
			  -lz \
			  -lgfortran \
			  -lm
endif

# For netCDF4 using HDF5
	CDFLIB		= -L$(NETCDF4_DIR)/lib -lnetcdff -lnetcdf \
			  -L$(HDF5_DIR)/lib -lhdf5_hl -lhdf5

# Directly compile the .F source files to the .o object files
# since gfortran can handle the C compiler directives in Fortran code
%.o : %.F
	$(FC) $(FFLAGS) -c $*.F -o $*.o

#
# End of platform_specific_includes.mk.intel-mac
#
