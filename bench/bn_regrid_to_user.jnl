! bn_regrid_to_user
! 8/99 *sh*

! test various regridding combos that involve user-defined variables
! for the target grids

use coads_climatology
use levitus_climatology

! define test objects
let a = sst[d=coads_climatology] + 1
let b = sst + 1		! data set unspecified
DEFINE AXIS/Y=20s:20n:.5/units=degrees yax
DEFINE GRID/like=sst[d=coads_climatology]/y=yax gg

! basic regrid (implicit grid -- sst and temp geometries are mismatched)
list/x=180/y=0 temp[d=2,k=1,g=a[d=1]]
show grid

! per axis regrid
list/x=180/y=0 temp[d=2,k=1,gx=a[d=1],gy=yax]
list/x=180/y=0 temp[d=2,k=1,gy=yax,gx=a[d=1]]
show grid

! combined full grid and per-axis
list/x=180/y=0 temp[d=2,k=1,g=gg,gx=a[d=1]]
list/x=180/y=0 temp[d=2,k=1,gx=a[d=1],g=gg]
show grid

! pseudo-variable access
list/i=1:4 i[g=a]		! a is previously loaded
let c = a
list/i=1:4 i[g=c]		! c is not previously loaded
let d = c
list/i=1:4 x[gx=d]

! DEFINE GRID based on a user-defined variable
let e = d
DEFINE GRID/LIKE=e/x=temp[d=levitus_climatology] gg1
show grid gg1
let f = sst[y=20s:20n:.1,d=coads_climatology]
DEFINE GRID/LIKE=f/x=temp[d=levitus_climatology] gg2
cancel variable f
show grid gg2
show grid/dynamic

! demonstrate proper management of dynamic axes
DEFINE GRID/LIKE=gg2 gg3
show grid/dynamic
DEFINE GRID/like=temp[d=levitus_climatology] gg2
show grid gg2
show grid/dynamic

! SET GRID using a user-defined variable
let g = sst[x=0:30:.1,d=coads_climatology]
set grid g
show grid

! The SET GRID (default) definition should be protected -- not altered
load/d=coads_climatology sst[y=-10:10:.1,l=1,x=180]
show grid
show grid/dynamic

! deliberate errors
set mode ignore
load/x=180/y=0 temp[d=2,k=1,g=no_exist]	! non-existent target variable
let v2 = temp[d=2,k=1,gx=a[d=1],gy=yax]
load/x=180/y=0 v2
cancel variable a
load/x=180/y=0 v2		! non-existent target grid
set mode/last ignore
