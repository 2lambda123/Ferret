\cancel mode verify
! polymark_datekey.jnl
! 11/05 ACM 

! Description: Plot symbols colored by values of a variable along a track
!              and labelled with dates from a time axis
!
!              Needs a basemap or other underlying plot to define scaling
!              parameters.

! Usage:                    $1              $2   $3    $4       $5      $6     $7      [*8]
! Yes?	GO polymark_datekey polygon_command xpts ypts [values] [shape] [scale] timevar [tunits]
! $1 - the plot command with qualifiers (eg POLYGON/OVER/KEY)
! $2 - X coordinates of track 
! $3 - Y coordinates of track 
! $4 - variable whose values will be plotted along the track (eg SST)
! $5 - shape of the symbol, as defined by polyshape.jnl 
! $6 - scale the values by this factor (optional, default 1)
! $7 - variable on the time axis to use for labelling the key
! $8 - optional; precision of labelling time axis; "days", "hours" etc
!      If not specified, the script uses the units of the time axis.

!      shape names include:
!           triangle           delta           square
!           diamond            pentagon        hexagon
!           circle             star            plus
!           ex

! examples
!       GO polymark_datekey polygon/over/key lon lat sst diamond " " tax

! In detail, set cruise track as a time series and plot on a map: 
!       yes? !  The key labels need more space on the right, so define 
!       yes? !  a viewport leaving amargin on the right
!
!       yes? def view/x=0:0.8/y=0:1 xview
!       yes? set view xview
!
!       yes? def axis/t=1-jan-1990:1-mar-1990:24/units=hours timeax
!       yes? let lpts = L[gt=timeax]
!       yes? let xpts = 180 + 50*COS(2*3.14*lpts/60)
!       yes? let ypts = 15 + 20*sin(2*3.14*lpts/60)
!       yes? let taxvar = t[gt=timeax]
!
!       yes? GO basemap x=120:250 Y=25s:65n 20
!       yes? GO polymark_datekey polygon/over/key/nolab  xpts,ypts,lpts,ex,0.5,taxvar,days
!
!          ! compare, without the last argument - dates labelled with hours as well.
!       yes? GO basemap x=120:250 Y=25s:65n 20
!       yes? GO polymark_datekey polygon/over/key/nolab  xpts,ypts,lpts,ex,0.5,taxvar

! argument check
QUERY/IGNORE $1"<usage: yes? GO polymark_datekey polygon_command xpts ypts [values] [shape] [scale] timevar [timunits]"
QUERY/IGNORE $2"<usage: yes? GO polymark_datekey polygon_command xpts ypts [values] [shape] [scale] timevar [timunits]"
QUERY/IGNORE $3"<usage: yes? GO polymark_datekey polygon_command xpts ypts [values] [shape] [scale] timevar [timunits]"
QUERY/IGNORE $7"<usage: yes? GO polymark_datekey polygon_command xpts ypts [values] [shape] [scale] timevar [timunits]"

! save the input expressions into simple variable definitions
LET/QUIET PLMxpoly = ($2)
LET/QUIET PLMypoly = ($3)
LET/QUIET PLMpolydata = $4"0"
LET/QUIET PLMtdata = $7"0"

! If time units for labelling the key given in arg 8, use that, else units from T axis 
! If somehow an unformatted T axis, will label with just numbers

IF ($8"0|*>1") THEN
   DEFINE SYMBOL PLM_tunits = $8
ELSE
   DEFINE SYMBOL PLM_tunits = "`PLMtdata,RETURN=tunits`"
   IF `STRCMP(($PLM_tunits), " ") EQ 0` THEN 
      DEFINE SYMBOL PLM_tunits = none
   ELSE 
      DEFINE SYMBOL PLM_tunits = `PLMtdata,RETURN=tunits`
   ENDIF
ENDIF

! determine the orientation of the data (and check that it is 1D Time line, or a point)
DEFINE SYMBOL PLMax `PLMxpoly,return=shape`
DEFINE SYMBOL PLMpoly_ax ($PLMax"|POINT>Z|X>Z|Y>Z|Z>Y|T>Z|<error: data is not a point or line")

! units/inch scale factors
LET/QUIET PLMdefault_scale =$6"1" *  0.1
LET/QUIET PLMx_correction = PLMdefault_scale*((($xaxis_max))-(($xaxis_min)))/($ppl$xlen)
LET/QUIET PLMy_correction = PLMdefault_scale*((($yaxis_max))-(($yaxis_min)))/($ppl$ylen)

! optionally create the polygon coordinates, xpolyshape, ypolyshape
! else check that the coordinates exist
IF $5"0|*>1" THEN
   GO polyshape $5
ELSE
   LOAD xpolyshape, ypolyshape  ! THESE MUST BE DEFINED BY GO polyshape
ENDIF

! make sure that the polygon coordinates are along the correct axis
! and correct the coordinates for unequal axis scaling and user scale factor 
LET/QUIET PLMxpolymark = ($PLMpoly_ax)SEQUENCE(xpolyshape) * PLMx_correction
LET/QUIET PLMypolymark = ($PLMpoly_ax)SEQUENCE(ypolyshape) * PLMy_correction

$1/coord_ax=($PLMpoly_ax)/set  PLMxpoly+PLMxpolymark, PLMypoly+PLMypolymark, PLMpolydata
ppl shakey 1,1,0.0000001,100
ppl fillpol/over

! set up the date/time labels for the color key
! (see insitu_setup.jnl)

LET TLAB_tstart = `PLMtdata[L=@min]`

LET TLAB_tend = `PLMtdata[L=@max]`

LET TLAB_nstep = `($LEV_num)-1`

LET TLAB_tstep = (`TLAB_tend`-`TLAB_tstart`) / (`tlab_nstep`)

let tdate = `TLAB_tstart`

IF ($PLM_tunits"none>0|*>1") THEN
   REPEAT/RANGE=1:`TLAB_nstep+1`/name=m (\ 
  LET datelab = tax_datestring(tdate, PLMtdata, "($PLM_tunits)") ;\
  let yloc = (($ppl$ylen)*`m-1`)/`TLAB_nstep`-.05; \
  let md = MOD(`m`,2);\
  label/nouser `($ppl$xlen)+.6`,`yloc`,-1,0,.1 "`datelab`";\
  let tdate = `tdate` + `TLAB_tstep`)
ELSE
   REPEAT/RANGE=1:`TLAB_nstep+1`/name=m (LET datelab = tdate;\
  let yloc = (($ppl$ylen)*`m-1`)/`TLAB_nstep`-.05; \
  let md = MOD(`m`,2);\
  label/nouser `($ppl$xlen)+.6`,`yloc`,-1,0,.1 "`datelab`";\
  let tdate = `tdate` + `TLAB_tstep`)
ENDIF

!  IF `md EQ 1` THEN  label/nouser `($ppl$xlen)+.6`,`yloc`,-1,0,.1 "`datelab`";\

! cancel symbol PLM*
! cancel variable PLM*
set mode/last verify

